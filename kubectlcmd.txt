# deploy container to k8s pod
kubectl create deployment <deployment_name> --image=<container> -n <namespace>
kubectl create deployment bqdinator --image=asia.gcr.io/mycompany-blockchain-stg/bqdinator:latest -n myproject

# delete a deployment
kubectl delete deployment <deployment_name> -n <namespace>

# show list of ingress
kubectl -n <namespace> get ingress
kubectl -n <namespace> get ing 
# show specific ingress details
kubectl -n <namespace> describe ingress <ingress_name>
kubectl -n <namespace> describe ing <ingress_name>  
# describe ingress routes
kubectl -n <namespace> describe ingress besu-ingress-routes

# apply k8s ingress yaml file
kubectl apply -f <k8s_yaml>.yml

# see logs
kubectl get pods -n gitlab-managed-apps
kubectl logs install-helm -n gitlab-managed-apps

# see events
kubectl get events --sort-by=.metadata.creationTimestamp -n bc

# create a pod
kubectl -n bc create -f ./config-example.yaml

# delete a pod
kubectl -n bc delete -f ./config-example.yaml

# show list of GKE contexts
kubectl config get-contexts

# show current cluster
kubectl config current-context

# select local cluster
kubectl config use-context minikube

# connect with your aws cluster
aws eks --region us-east-1 update-kubeconfig --name my-test-cluster

# to connect to a pod command line
kubectl exec nginx-f89759699-2gbwc  -it -- bash
# connect to container in pod
kubectl -n <namespace> exec <pod> --container <container_name> -it -- bash
# connect to postgres container
kubectl exec -it <pod> -c postgresql -- psql -U postgres -p 5432

# live log
kubectl -n bc logs peer0-ade-hlf-peer-797894965c-cvrxd --tail 1 --follow

# scale deployment replicas
kubectl scale deployment <name> --replicas=10

# describe pod (to find pod's external ip address)
kubectl -n <namespace> describe pod <podname>

# get namespace
kubectl get namespace

# delete a pod
kubectl delete pod  <pod_name>  -n <namespace>

# get service
kubectl get svc -n <namespace>
kubectl get service -n <namespace>
kubectl get service -n <namespace> -o wide

# get service of current context
kubectl --context CURRENT_CONTEXT get svc
kubectl --context arn:aws:eks:us-west-2:151215527701:cluster/sube-cluster-tf get svc

# open aws-auth configmap for editing
kubectl edit -n kube-system configmap/aws-auth
# reading aws-auth configmap
kubectl describe -n kube-system configmap/aws-auth

# helm
# create a new chart in a new directory, only run once
helm create ordermgt
# check syntax of Chart.yaml file
helm lint ./ordermgt/
# install the container image to kubernetes cluster
helm install <release_name> <folder_name>
helm install ordermgt ./ordermgt/ --namespace test
helm install ordermgt ./ordermgt/ --namespace test --set service.type=NodePort
helm install ordermgt ./ordermgt/ --namespace test --values ordermgt/values.yaml
helm ls
helm ls --namespace test
# helm delete is renamed to helm uninstall
helm delete --namespace test ordermgt
helm uninstall --namespace test ordermgt ./ordermgt
helm -n test list -aq

# one  command to delete all helm resources
helm -n <namespace> list --short | xargs -L1 helm uninstall -n <namespace>
