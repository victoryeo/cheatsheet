# search a string
find . | xargs grep "searchstring"  2>/dev/null
find . -exec grep searchstring {} \; 2>/dev/null

# replace string 
find ./ -type f -exec sed -i -e 's/old/new/g' {} \;

# change file extension recursively
find ./ -depth -name "*.js" -exec sh -c 'mv "$1" "${1%.js}.ts"' _ {} \;

# curl commands
curl -H "Content-Type: application/json" -X POST http://127.0.0.1:5000/api/users/register -d '{"username":"xyz","password":"xyz"}'
curl -X GET http://127.0.0.1:5000/api/orders

# query couchdb manually , run from bastion VM
curl -X GET http://11.50.16.140:5984/_all_dbs
curl -X GET http://11.50.16.140:5984/db_name/_all_docs
curl -X GET http://11.50.16.140:5984/db_name/_all_docs?limit=2
curl -H "Content-Type: application/json" -X POST http://11.50.16.140:5984/db_name/_find -d '{"selector": {"metadata.title": "live.let" }}'
curl -H "Content-Type: application/json" -X POST http://11.50.16.140:5984/db_name/_find -d '{"selector": {"metadata.title": "live.let" },"limit":2 }'
curl -H "Content-Type: application/json" -X POST http://11.50.16.140:5984/db_name/_find -d '{"selector": {"metadata.title": "live.let" },"limit":2 , "skip":2}'

# swagger generate
swagger-codegen generate -i openapi.yaml -l typescript-angular

# access postgres db
# local instance 
sudo -u postgres psql
# remote tunneled instance
sudo -u postgres psql -p <tunnel_port_number> -h localhost

# terraform
terraform init -reconfigure
terraform state pull > default.tfstate
terraform state push  default.tfstate
terraform plan -out=terra.plan
terraform apply "terra.plan"
# to see TF log
export TF_LOG=debug
# list state
terraform state list
# remove state using the name
terraform state rm <name>
# if terraform init get timeout, add this as workaround
export TF_REGISTRY_CLIENT_TIMEOUT=30

# vpn
sudo ./openconnect --protocol=gp <ip_addr>:<port_no> -u user-name

# specify local npm modules
npm install --save ../my-local-repo

# run ts files
npx ts-node src/foo.ts

# make new group visible for user
exec sudo su -l $USER

# show first 30 lines
head -30 package.json

# set default editor
update-alternatives --config editor

# show all open tcp ports
sudo netstat -tulpn
sudo ss -tulna

# scan for open ports
nmap 192.168.1.0/24

# check command associated with open ports
lsof -n -i4TCP:8081

# check process associated with open ports
sudo netstat -apn -A inet | grep :8081

# unpin files in ipfs daemon
ipfs pin ls -q --type recursive  | xargs ipfs pin rm

# remove (garbage collect)  files in ipfs daemon 
ipfs repo gc

# On react native, to access your local development server, do port mapping
# the port 4004 is tcp port of local development server
adb reverse tcp:4004 tcp:4004

# jmeter load test
./jmeter -n -t ../token-backend-eks.jmx -l loadtest18.csv -e -o ./output18

# fix: fatal could not read Username for 'https://gitlab.com
go env -w GOPRIVATE=gitlab.com/<pathname>*
